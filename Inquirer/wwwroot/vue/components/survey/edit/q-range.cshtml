@if (Model.Section == "template")
{
    <div class="options grid">
        <div class="input option item" c-start="1" c-end="3">
            <label>Кількість кроків</label>
            <input class="shadowed" type="number" v-model="steps" v-validate="'required|between:1,10'"
                   :name="`question[${ $parent.key }].option[3].value`" />
            <span v-show="errors.has(`question[${ $parent.key }].option[3].value`)" class="error">
                {{ errors.first(`question[${ $parent.key }].option[3].value`) }}
            </span>
        </div>
        <div class="flex column item" c-start="3" c-end="8">
            <div class="input option">
                <label>Перша позиція (назва)</label>
                <input class="shadowed" type="text" v-model="first.label" v-validate="'required'"
                       :name="`question[${ $parent.key }].option[1].label`" />
                <span v-show="errors.has(`question[${ $parent.key }].option[1].label`)" class="error">
                    {{ errors.first(`question[${ $parent.key }].option[1].label`) }}
                </span>
            </div>
            <div class="input option">
                <label>Остання позиція (назва)</label>
                <input class="shadowed" type="text" v-model="last.label" v-validate="'required'"
                       :name="`question[${ $parent.key }].option[2].label`" />
                <span v-show="errors.has(`question[${ $parent.key }].option[2].label`)" class="error">
                    {{ errors.first(`question[${ $parent.key }].option[2].label`) }}
                </span>
            </div>
        </div>
        <div class="flex column item" c-start="8" c-end="13">
            <div class="input option">
                <label>Перша позиція (значення)</label>
                <input class="shadowed" type="number" v-model="first.value" v-validate="'required'"
                       :name="`question[${ $parent.key }].option[1].value`" />
                <span v-show="errors.has(`question[${ $parent.key }].option[1].value`)" class="error">
                    {{ errors.first(`question[${ $parent.key }].option[1].value`) }}
                </span>
            </div>
            <div class="input option">
                <label>Остання позиція (значення)</label>
                <input class="shadowed" type="number" v-model="last.value" v-validate="'required'"
                       :name="`question[${ $parent.key }].option[2].value`" />
                <span v-show="errors.has(`question[${ $parent.key }].option[2].value`)" class="error">
                    {{ errors.first(`question[${ $parent.key }].option[2].value`) }}
                </span>
            </div>
        </div>
    </div>
}
else
{
    <script id="q-range-script" type="text/javascript">
        Vue.component("q-range", {
            template: "#q-range-template",
            props: ["element"],
            inject: ["$validator"],
            data: () => {
                return {
                    steps: 5,
                    first: {
                        label: "1",
                        value: "1"
                    },
                    last: {
                        label: "5",
                        value: "5"
                    }
                }
            },
            created: function () {
                if (this.element.data) {
                    this.first = {
                        label: this.element.data.options[0].label,
                        value: this.element.data.options[0].value
                    };
                    this.last = {
                        label: this.element.data.options[1].label,
                        value: this.element.data.options[1].value
                    };
                    this.steps = this.element.data.options[2].value;
                }
            },
            computed: {
                result: function () {
                    var r = [
                        {
                            label: this.first.label,
                            value: this.first.value,
                            image: null,
                            isCustom: false
                        },
                        {
                            label: this.last.label,
                            value: this.last.value,
                            image: null,
                            isCustom: false
                        },
                        {
                            label: null,
                            value: this.steps,
                            image: null,
                            isCustom: false
                        }
                    ];
                    return r;
                }
            },
            methods: {
            }
        });
    </script>
}
