@if (Model.Section == "template")
{
    <div :id="`question[${element.key}]`" class="question block bounded">
        <div class="header">
            <div class="title">{{ element.title }}</div>
        </div>
        <div class="content grid" columns="2">
            <div class="diagram item" c-start="1" c-end="3">
                <svg width="1248" height="441">
                    <!-- horizontal lines -->
                    <template v-for="n in 5">
                        <polyline :points="`0,${ (n - 1) * 100 } 1248,${ (n - 1) * 100 }`" style="fill:none;stroke:#cecece;stroke-width:1px;" shape-rendering="crispEdges" />
                    </template>
                    <!-- vertical lines -->
                    <polyline points="0,0 0,400" style="fill:none;stroke:#cecece;stroke-width:1px;" shape-rendering="crispEdges" />
                    <polyline points="1247,0 1247,400" style="fill:none;stroke:#cecece;stroke-width:1px;" shape-rendering="crispEdges" />
                    <!-- canvas -->
                    <foreignObject x="20" y="0" width="1208" height="430">
                        <div class="canvas">
                            <div class="group" v-for="(option, i) in element.options.filter(o => o.label)">
                                <div class="container">
                                    <template v-if="option.answers.length > 0">
                                        <div class="item" v-for="(answer, j) in option.answers">
                                            <div class="column" :style="{ height: (option.quantity * step + 1) + 'px' }" :title="option.quantity">
                                                <div class="title" v-if="element.typeId == 4 || element.typeId == 5">
                                                    {{ find(answer.content).index + 1}}
                                                </div>
                                            </div>
                                        </div>
                                    </template>
                                    <template v-else>
                                        <div class="item empty">
                                            <div class="column" title="0"></div>
                                        </div>
                                    </template>
                                </div>
                                <div class="legend">
                                    <div class="line"></div>
                                    <div class="label">
                                        <span>{{ i + 1 }}</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </foreignObject>
                </svg>
            </div>
            <template v-for="(option, i) in element.options.filter(o => o.label)">
                <div class="option item" c-start="1" c-end="2" :key="option.id">
                    <div class="row">{{ i + 1 }}</div>
                    <div class="label">{{ option.label }}</div>
                    <div class="quantity">{{ option.quantity }}</div>
                </div>
            </template>
            <template v-for="(option, i) in element.options.filter(o => o.label == null)">
                <div class="option item" c-start="2" c-end="3" :key="option.id" :r-start="i + 2">
                    <div class="column">{{ i + 1 }}</div>
                    <div class="label">{{ option.value }}</div>
                    <div class="quantity">{{ option.quantity }}</div>
                </div>
            </template>
        </div>
    </div>
}
else
{
    <script id="c-question-script" type="text/javascript">
        Vue.component("c-question", {
            template: "#c-question-template",
            props: ["element"],
            data: () => {
                return {
                    step: 1
                }
            },
            created: function () {
                this.step = 400 / this.element.maximum;
            },
            methods: {
                find: function (id) {
                    let options = this.element.options.filter(o => o.label == null);
                    for (var i = 0; i < options.length; i++) {
                        let o = options[i];
                        if (o.id == id) {
                            return {
                                name: o.value,
                                index: i
                            };
                        }
                    }
                    return null;
                }
            }
        });
    </script>
}